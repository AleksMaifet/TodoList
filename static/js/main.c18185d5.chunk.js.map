{"version":3,"sources":["reducer/TaskReducer.ts","components/AddItemForm.tsx","components/Button.tsx","components/EditableSpan.tsx","ApiTodolists/ApiTodolist.ts","reducer/AppReducer.ts","reducer/TodoListReducer.ts","components/Task.tsx","TodoList.tsx","Selectors/Selectors.ts","components/ErrorAlert.tsx","components/AppBar.tsx","components/LinearProgress.tsx","App.tsx","serviceWorker.ts","reducerRedux/ReducerRedux.tsx","index.tsx"],"names":["TaskStatus","TaskPriorities","AddItemForm","React","memo","callBack","todolistStatus","useState","title","setTitle","error","setError","addTask","newTitle","trim","TextField","value","onChange","e","currentTarget","onKeyPress","charCode","label","Fab","color","size","onClick","disabled","Add","ButtonBody","props","changeColorButton","name","filter","Button","endIcon","Send","variant","EditableSpan","spanTitle","changeTitle","setChangeTitle","activeChangeMode","callback","onBlur","key","autoFocus","onDoubleClick","initial","axios","create","withCredentials","headers","baseURL","todolistsAPI","get","post","todolistId","delete","todolistID","put","taskId","module","initialState","status","isLoadAC","type","payload","isErrorAC","initialization","removeTaskAC","addTaskAC","task","updateTaskAC","TaskId","changeTaskEntityStatusAC","entityStatus","updateTaskTC","dispatch","a","description","priority","startDate","deadline","todoListId","id","data","item","messages","resultCode","removeTodolistAC","changeTodolistTitleAC","changeTodolistEntityStatusAC","createTodolistTC","todolistTitle","todolist","Tasks","onClickHandler","onChangeHandler","changeTaskTitleHandler","className","Completed","newIsDoneValue","checked","New","IconButton","Delete","fontSize","Todolist","useDispatch","useSelector","state","el","tasks","useEffect","items","totalCount","taskForRender","t","removeTask","useCallback","deleteTaskTC","createTaskTC","changeFilter","changeTadoListAC","changeTodolistTitle","updateTodolistTC","removeTodolist","deleteTodolistTC","removeTodolistHandler","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler","addTaskHandler","changeTodolistTitleHandler","style","listStyleType","map","todolistsState","app","ErrorAlert","errorStatus","isOpen","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","Alert","backgroundColor","severity","MenuAppBar","auth","setAuth","setAnchorEl","Box","sx","flexGrow","FormGroup","FormControlLabel","control","Switch","target","aria-label","AppBar","position","Toolbar","justifyContent","display","alignItems","edge","Typography","aria-controls","aria-haspopup","Avatar","alt","src","LinearIndeterminate","isLoad","height","width","LinearProgress","App","todolists","addTodolist","todolistsComponents","tl","Grid","Paper","elevation","padding","Container","fixed","container","margin","spacing","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","b","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c18185d5.chunk.js","sourcesContent":["import {AddTodolistACType, RemoveTodoListACType, RequestStatusType} from \"./TodoListReducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AxiosUpdateTaskModule, todolistsAPI} from \"../ApiTodolists/ApiTodolist\";\r\nimport {isErrorAC, isLoadAC} from \"./AppReducer\";\r\n\r\nexport type TasksStateType = {\r\n\t[key: string]: Array<TaskTypeHandler>\r\n}\r\n\r\n\r\nexport enum TaskStatus {\r\n\tNew = 0,\r\n\tInProgress = 1,\r\n\tCompleted = 2,\r\n\tDraft = 3,\r\n}\r\nexport enum TaskPriorities {\r\n\tLow = 0,\r\n\tMiddle = 1,\r\n\tHi = 2,\r\n\tUrgently = 3,\r\n\tLater = 4,\r\n}\r\n\r\nexport type TaskType = {\r\n\tdescription: string\r\n\ttitle: string\r\n\tstatus: TaskStatus\r\n\tpriority: TaskPriorities\r\n\tstartDate: string\r\n\tdeadline: string\r\n\tid: string\r\n\ttodoListId:string\r\n\torder: number\r\n\taddedDate: string\r\n}\r\n\r\nexport type TaskTypeHandler =  TaskType & {\r\n\tentityStatus:RequestStatusType\r\n}\r\nconst initialization:TasksStateType = {}\r\n\r\nexport const TaskReducer = (state = initialization, action: TaskHandlerTypes): TasksStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"REMOVE-TASK\":\r\n\t\t\treturn {...state, [action.todolistID]: state[action.todolistID].filter(t => t.id !== action.taskId)}\r\n\t\tcase \"ADD-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID] : [{...action.task,entityStatus:'idle'},...state[action.todolistID]]\r\n\t\t\t}\r\n\t\tcase \"UPDATE-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID]: state[action.todolistID].map(b => b.id === action.TaskId ? {\r\n\t\t\t\t\t...b,\r\n\t\t\t\t\t...action.module\r\n\t\t\t\t} : b)\r\n\t\t\t}\r\n\t\tcase \"ADD-TODOLIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolist.id]: []\r\n\t\t\t}\r\n\t\tcase \"SET-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state, [action.todolistID]: action.tasks.map(t => ({...t, entityStatus: 'idle'}))\r\n\t\t\t}\r\n\t\tcase \"REMOVE-TODOLISTS\":\r\n\t\t\tdelete state[action.todolistID]\r\n\t\t\treturn state\r\n\t\tcase \"CHANGE-TASK-ENTITY-STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID]: state[action.todolistID].map(t => t.id === action.taskId ? {\r\n\t\t\t\t\t...t, entityStatus: action.entityStatus\r\n\t\t\t\t} : t)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type TaskHandlerTypes =\r\n\tRemoveTaskACType\r\n\t| AddTaskACType\r\n\t| AddTodolistACType\r\n\t| ChangeTaskTitleACType\r\n\t| RemoveTodoListACType\r\n\t| SetTaskACType\r\n\t| changeTaskEntityStatusType\r\n\r\nexport type RemoveTaskACType = ReturnType<typeof removeTaskAC>\r\n\r\nexport const removeTaskAC = (taskId: string, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'REMOVE-TASK',\r\n\t\ttaskId,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type AddTaskACType = ReturnType<typeof addTaskAC>\r\n\r\nexport const addTaskAC = (todolistID:string,task:TaskType) => {\r\n\treturn {\r\n\t\ttype: 'ADD-TASK',\r\n\t\ttodolistID,\r\n\t\ttask,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTaskTitleACType = ReturnType<typeof updateTaskAC>\r\n\r\nexport const updateTaskAC = (TaskId: string, module:AxiosUpdateTaskModule, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE-TASK',\r\n\t\tTaskId,\r\n\t\tmodule,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type SetTaskACType = ReturnType<typeof setTaskAC>\r\n\r\nexport const setTaskAC = (todolistID:string,tasks:TaskType[]) => {\r\n\treturn {\r\n\t\ttype: 'SET-TASK',\r\n\t\ttodolistID,\r\n\t\ttasks,\r\n\t} as const\r\n}\r\n\r\nexport type changeTaskEntityStatusType = ReturnType<typeof changeTaskEntityStatusAC>\r\n\r\nexport const changeTaskEntityStatusAC = (taskId:string,todolistID: string,entityStatus:RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TASK-ENTITY-STATUS',\r\n\t\ttaskId,\r\n\t\ttodolistID,\r\n\t\tentityStatus,\r\n\t} as const\r\n}\r\n\r\nexport const getTasksTC = (id:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tconst {data} = await todolistsAPI.getTasks(id)\r\n\t\tconst {error, items, totalCount} = data\r\n\t\tdispatch(setTaskAC(id, items))\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\n\r\nexport const createTaskTC = (title:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry{\r\n\t\t\tconst {data} = await todolistsAPI.createTask(todolistID, title)\r\n\t\t\tconst {data: {item}, messages, resultCode} = data\r\n\t\t\tif(resultCode === 0) {\r\n\t\t\t\tdispatch(addTaskAC(todolistID, item))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(isErrorAC(messages[0]))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e){\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const deleteTaskTC = (taskId:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tdispatch(changeTaskEntityStatusAC(taskId,todolistID,'loading'))\r\n\t\tawait todolistsAPI.deleteTask(todolistID, taskId);\r\n\t\tdispatch(removeTaskAC(taskId, todolistID));\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\nexport const updateTaskTC = (task:TaskType) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\t\tconst module: AxiosUpdateTaskModule = {\r\n\t\t\t\ttitle:task.title,\r\n\t\t\t\tdescription: task.description,\r\n\t\t\t\tstatus:task.status,\r\n\t\t\t\tpriority: task.priority,\r\n\t\t\t\tstartDate: task.startDate,\r\n\t\t\t\tdeadline: task.deadline,\r\n\t\t\t}\r\n\t\t\tconst {data} = await todolistsAPI.updateTask(task.todoListId,task.id,module)\r\n\t\t\tconst {data: {item},messages,resultCode} = data\r\n\t\t\tdispatch(updateTaskAC(task.id, item, task.todoListId))\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}","import React, {ChangeEvent, KeyboardEvent,useState} from \"react\";\r\nimport {Fab, TextField} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport {RequestStatusType} from \"../reducer/TodoListReducer\";\r\n\r\ntype AddItemFormType = {\r\n  callBack: (title: string) => void\r\n  todolistStatus?: RequestStatusType\r\n}\r\n\r\nexport const AddItemForm = React.memo(({callBack,todolistStatus}:AddItemFormType)=>{\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addTask = () => {\r\n        let newTitle = title.trim();\r\n        if (newTitle !== \"\") {\r\n           callBack(newTitle);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if(error !== null) setError(null);\r\n        if (e.charCode === 13 && todolistStatus === 'idle' ) {\r\n          addTask();\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <TextField value={title}\r\n                 onChange={onChangeHandler}\r\n                 onKeyPress={onKeyPressHandler}\r\n                 error={!!error}\r\n                 label={error ? error : 'Type value'}\r\n      />\r\n      <Fab color=\"secondary\" size=\"small\" onClick={addTask} disabled={todolistStatus === 'loading'}>\r\n        <Add/>\r\n      </Fab>\r\n    </div>\r\n  )\r\n})","import React from \"react\";\r\nimport {Send} from \"@material-ui/icons\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {valueType} from \"../reducer/TodoListReducer\";\r\n\r\ntype ButtonType = {\r\n\tonClick: () => void\r\n\tname:string\r\n\tfilter?:valueType\r\n\tcolor?:string\r\n}\r\n\r\nexport const ButtonBody = React.memo((props:ButtonType) => {\r\n\tconst callback = () => props.onClick();\r\n\tconst changeColorButton = props.name === props.filter ? 'primary' : 'inherit';\r\n\treturn (\r\n\t<Button endIcon={<Send />} variant=\"contained\" color={changeColorButton} onClick={callback}>{props.name}</Button>\r\n\t)\r\n})\r\n","import React, {useState, ChangeEvent, KeyboardEvent} from \"react\";\r\n\r\ntype EditableSpanType = {\r\n\tspanTitle: string\r\n\tcallback: (spanTitle: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(({spanTitle, ...props}: EditableSpanType) => {\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [changeTitle, setChangeTitle] = useState(false)\r\n\tconst changeHandler = () => {\r\n\t\tsetChangeTitle(true)\r\n\t\tsetTitle(spanTitle)\r\n\t}\r\n\tconst changeInputHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n\tsetTitle(e.currentTarget.value)\r\n\t}\r\n\tconst activeChangeMode = () => {\r\n\t\tprops.callback(title)\r\n\t\tsetChangeTitle(false)\r\n\t}\r\n\tconst changeInputEnter = (e:KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tactiveChangeMode()\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\tchangeTitle\r\n\t\t\t? <input value={title} onChange={changeInputHandler} onBlur={activeChangeMode} onKeyPress={changeInputEnter} autoFocus/>\r\n\t\t\t: <span onDoubleClick={changeHandler}>{spanTitle}</span>\r\n\t)\r\n})","import axios from \"axios\";\r\nimport {TaskPriorities, TaskStatus, TaskType} from \"../reducer/TaskReducer\";\r\n\r\n\r\ntype AxiosGetTodolists = {\r\n\tid: string\r\n\taddedDate:string\r\n\torder: number\r\n\ttitle: string\r\n}\r\ntype AxiosResponseType<D> = {\r\n\tresultCode: number\r\n\tmessages: string[]\r\n\tdata: D\r\n}\r\ntype AxiosGetTasks = {\r\n\titems: TaskType[]\r\n\ttotalCount: number\r\n\terror: string\r\n}\r\n\r\nexport type AxiosUpdateTaskModule = {\r\n\ttitle: string\r\n\tdescription:string\r\n\tstatus: TaskStatus\r\n\tpriority: TaskPriorities\r\n\tstartDate: string\r\n\tdeadline: string\r\n}\r\n\r\nconst initial = axios.create(\r\n\t{\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t'API-KEY': '5c7c1e5a-aa4c-4b00-a92b-b6f5df506a28'\r\n\t},\r\n\tbaseURL:'https://social-network.samuraijs.com/api/1.1/'\r\n}\r\n)\r\n\r\nexport const todolistsAPI = {\r\n\tgetTodolists() {\r\n\t\treturn initial.get<Array<AxiosGetTodolists>>('todo-lists',{})\r\n\t},\r\n\tcreateTodolist(title:string) {\r\n\t\treturn initial.post<AxiosResponseType<{item:AxiosGetTodolists}>>('todo-lists', {title}, {})\r\n\t},\r\n\tdeleteTodolist(todolistId:string) {\r\n\t\treturn initial.delete<AxiosResponseType<{}>>(`todo-lists/${todolistId}`,  {})\r\n\t},\r\n\tupdateTodolist(todolistID:string,title:string) {\r\n\t\treturn initial.put<AxiosResponseType<{}>>(`todo-lists/${todolistID}`,{title},  {})\r\n\t},\r\n\tgetTasks(todolistId:string) {\r\n\t\treturn initial.get<AxiosGetTasks>(`todo-lists/${todolistId}/tasks`,  {})\r\n\t},\r\n\tcreateTask(todolistId:string,title:string) {\r\n\t\treturn initial.post<AxiosResponseType<{item:TaskType}>>(`todo-lists/${todolistId}/tasks`,  {title},{})\r\n\t},\r\n\tdeleteTask(todolistId:string,taskId:string) {\r\n\t\treturn initial.delete<AxiosResponseType<{}>>(`todo-lists/${todolistId}/tasks/${taskId}`,  {})\r\n\t},\r\n\tupdateTask(todolistID:string,taskId:string,module:AxiosUpdateTaskModule) {\r\n\t\treturn initial.put<AxiosResponseType<{item:TaskType}>>(`todo-lists/${todolistID}/tasks/${taskId}`,{...module},  {})\r\n\t},\r\n}\r\n","export type StatusType = 'loading' | 'success';\r\n\r\n\r\nexport type InitialStateType = {\r\n\tstatus: StatusType\r\n\terror: string | null\r\n}\r\n\r\nconst initialState:InitialStateType = {\r\n\tstatus:'success',\r\n\terror:null\r\n}\r\n\r\n\r\nexport const appReducer = (state=initialState, action:ActionAppReducerType):InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD-PROGRESS':\r\n\t\t\treturn {...state,\r\n\t\t\t...action.payload}\r\n\t\tcase 'ERROR-STATUS'\t:\r\n\t\t\treturn {...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport type ActionAppReducerType = ReturnType<typeof isLoadAC> | ReturnType<typeof isErrorAC>\r\n\r\nexport const isLoadAC = (status:StatusType) => {\r\n\treturn {\r\n\t\ttype:'LOAD-PROGRESS',\r\n\t\tpayload:{\r\n\t\t\tstatus\r\n\t\t}\r\n\t} as const\r\n}\r\n\r\nexport const isErrorAC = (error:string | null) => {\r\n\treturn {\r\n\t\ttype: 'ERROR-STATUS',\r\n\t\tpayload:{\r\n\t\t\terror\r\n\t\t}\r\n\t} as const\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {todolistsAPI} from \"../ApiTodolists/ApiTodolist\";\r\nimport {isErrorAC, isLoadAC} from \"./AppReducer\";\r\n\r\nexport type valueType = 'All' | 'Active' | 'Completed';\r\nexport type RequestStatusType = 'idle' | 'loading';\r\n\r\nexport type TodolistType = {\r\n\tid: string\r\n\ttitle: string\r\n\torder: number\r\n\taddedDate:string\r\n}\r\n\r\nexport type TodolistTypeHandler = TodolistType & {\r\n\tfilter:valueType,\r\n\tentityStatus:RequestStatusType\r\n}\r\n\r\nconst initialization: Array<TodolistTypeHandler> = []\r\n\r\nexport const TodoListReducer = (state = initialization, action: TodolistHandlerTypes): Array<TodolistTypeHandler> => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE-TODOLISTS':\r\n\t\t\treturn [...state.map(t => t.id === action.todolistID ? {...t, filter: action.value} : t)]\r\n\t\tcase \"REMOVE-TODOLISTS\":\r\n\t\t\treturn [\r\n\t\t\t\t...state.filter(t => t.id !== action.todolistID)\r\n\t\t\t]\r\n\t\tcase \"CHANGE-TODOLIST-TITLE\":\r\n\t\t\treturn state.map(tl => tl.id === action.todolistID ? {...tl, title: action.title} : tl)\r\n\t\tcase \"ADD-TODOLIST\":\r\n\t\t\treturn [\r\n\t\t\t\t{...action.todolist,\r\n\t\t\t\t\tfilter: 'All',\r\n\t\t\t\t\tentityStatus:'idle'\r\n\t\t\t\t}\r\n\t\t\t\t,...state\r\n\t\t\t]\r\n\t\tcase \"SET-TODOLIST\":\r\n\t\t\treturn action.todolists.map(el => ({...el, filter: 'All',\tentityStatus:'idle'}))\r\n\t\tcase \"CHANGE-TODOLIST-ENTITY-STATUS\":\r\n\t\t\treturn state.map(t => t.id === action.todolistID ? {...t,entityStatus:action.entityStatus} : t)\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type TodolistHandlerTypes =\r\n\tChangeTodoListACType\r\n\t| RemoveTodoListACType\r\n\t| ChangeTodolistTitleACType\r\n\t| AddTodolistACType\r\n\t| SetTodolistACType\r\n\t| ChangeTodolistEntityStatusACType\r\n\r\nexport type ChangeTodoListACType = ReturnType<typeof changeTadoListAC>\r\n\r\nexport const changeTadoListAC = (value: valueType, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TODOLISTS',\r\n\t\tvalue,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\nexport type RemoveTodoListACType = ReturnType<typeof removeTodolistAC>\r\n\r\nexport const removeTodolistAC = (todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'REMOVE-TODOLISTS',\r\n\t\ttodolistID,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTodolistTitleACType = ReturnType<typeof changeTodolistTitleAC>\r\n\r\nexport const changeTodolistTitleAC = (title: string, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: \"CHANGE-TODOLIST-TITLE\",\r\n\t\ttitle,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type AddTodolistACType = ReturnType<typeof addTodolistAC>\r\n\r\nexport const addTodolistAC = (todolist:TodolistType) => {\r\n\treturn {\r\n\t\ttype: 'ADD-TODOLIST',\r\n\t\t\ttodolist\r\n\t} as const\r\n}\r\n\r\nexport type SetTodolistACType = ReturnType<typeof setTodolistAC>\r\n\r\nexport const setTodolistAC = (todolists: TodolistType[]) => {\r\n\treturn {\r\n\t\ttype: 'SET-TODOLIST',\r\n\t\ttodolists,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTodolistEntityStatusACType = ReturnType<typeof changeTodolistEntityStatusAC>\r\n\r\nexport const changeTodolistEntityStatusAC = (todolistID: string,entityStatus:RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TODOLIST-ENTITY-STATUS',\r\n\t\ttodolistID,\r\n\t\tentityStatus,\r\n\t} as const\r\n}\r\n\r\nexport const setTodolistsTC = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tconst {data} = await todolistsAPI.getTodolists()\r\n\t\t\tdispatch(setTodolistAC(data))\r\n\t\t}\r\n\t\tcatch (error){\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const createTodolistTC = (todolistTitle:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tconst {data} = await todolistsAPI.createTodolist(todolistTitle)\r\n\t\t\tconst {data:{item}, messages,resultCode} = data\r\n\t\t\tif(resultCode === 0){\r\n\t\t\t\tdispatch(addTodolistAC(item))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(isErrorAC(messages[0]))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const deleteTodolistTC = (todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tdispatch(changeTodolistEntityStatusAC(todolistID,'loading'))\r\n\t\tawait todolistsAPI.deleteTodolist(todolistID)\r\n\t\tdispatch(removeTodolistAC(todolistID));\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\nexport const updateTodolistTC = (title:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tawait todolistsAPI.updateTodolist(todolistID,title)\r\n\t\tdispatch(changeTodolistTitleAC(title,todolistID))\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {TaskStatus, TaskType, TaskTypeHandler} from \"../reducer/TaskReducer\";\r\n\r\n\r\ntype TasksType = {\r\n\ttask: TaskTypeHandler\r\n\tonClickHandler: (id: string) => void\r\n\tonChangeHandler: (task:TaskType) => void\r\n\tchangeTaskTitleHandler: (task:TaskType) => void\r\n}\r\n\r\n\r\nexport const Tasks = React.memo((props: TasksType) => {\r\n\tconst {task, onClickHandler,onChangeHandler,changeTaskTitleHandler} = props\r\n\r\n\r\n\treturn <li className={task.status === TaskStatus.Completed ? \"is-done\" : \"\"}>\r\n\t\t<input type=\"checkbox\" onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tlet newIsDoneValue = e.currentTarget.checked;\r\n\t\t\tonChangeHandler({...task,status: newIsDoneValue ? TaskStatus.Completed : TaskStatus.New})\r\n\t\t}}\r\n\t\t\t\t\t checked={task.status === TaskStatus.Completed}/>\r\n\t\t<EditableSpan spanTitle={task.title} callback={(title: string) => changeTaskTitleHandler({...task,title})}/>\r\n\t\t<IconButton disabled={task.entityStatus === 'loading'} onClick={() => onClickHandler(task.id)} size=\"small\">\r\n\t\t\t<Delete fontSize=\"small\"/>\r\n\t\t</IconButton>\r\n\t</li>\r\n})\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {AddItemForm} from \"./components/AddItemForm\";\r\nimport {ButtonBody} from \"./components/Button\";\r\nimport {EditableSpan} from \"./components/EditableSpan\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {\r\n    createTaskTC,\r\n    deleteTaskTC,\r\n    getTasksTC,\r\n    TaskStatus,\r\n    TaskType,\r\n    TaskTypeHandler,\r\n    updateTaskTC\r\n} from \"./reducer/TaskReducer\";\r\nimport {\r\n    changeTadoListAC,\r\n    deleteTodolistTC,\r\n    TodolistTypeHandler,\r\n    updateTodolistTC,\r\n    valueType\r\n} from \"./reducer/TodoListReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducersType} from \"./reducerRedux/ReducerRedux\";\r\nimport {Tasks} from \"./components/Task\";\r\n\r\n\r\ntype PropsType = {\r\n    id: string\r\n}\r\n\r\nexport const Todolist = React.memo(({...props}: PropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const todolist = useSelector<rootReducersType, TodolistTypeHandler>(state => state.todolist.filter(el => el.id === props.id)[0]);\r\n    const tasks = useSelector<rootReducersType, Array<TaskTypeHandler>>(state => state.tasks[props.id]);\r\n\r\n    useEffect(() => {\r\n       dispatch(getTasksTC(props.id))\r\n    }, [dispatch, props.id])\r\n\r\n\r\n    let taskForRender = tasks\r\n    if (todolist.filter === 'Active') {\r\n        taskForRender = tasks.filter(t => t.status === TaskStatus.New)\r\n    }\r\n    if (todolist.filter === 'Completed') {\r\n        taskForRender = tasks.filter(t => t.status === TaskStatus.Completed)\r\n    }\r\n\r\n    const removeTask = useCallback((taskId: string, todolistID: string) => {\r\n        dispatch(deleteTaskTC(taskId,todolistID))\r\n    }, [dispatch])\r\n\r\n    const addTask = useCallback( (title: string, todolistID: string) => {\r\n       dispatch(createTaskTC(title,todolistID))\r\n    }, [dispatch])\r\n    const changeFilter = useCallback((value: valueType, todolistID: string) => {\r\n        dispatch(changeTadoListAC(value, todolistID));\r\n    }, [dispatch])\r\n    const changeTodolistTitle = useCallback( (title: string, todolistID: string) => {\r\n      dispatch(updateTodolistTC(title,todolistID))\r\n    }, [dispatch])\r\n    const removeTodolist = useCallback( (todolistID: string) => {\r\n       dispatch(deleteTodolistTC(todolistID))\r\n    }, [dispatch])\r\n    const changeTaskTitleHandler = useCallback((task:TaskType) => {\r\n        dispatch(updateTaskTC(task))\r\n    }, [dispatch])\r\n    const onChangeHandler = useCallback((task:TaskType) => {\r\n        dispatch(updateTaskTC(task));\r\n    }, [dispatch])\r\n\r\n    const removeTodolistHandler = useCallback(() => {\r\n        removeTodolist(props.id)\r\n    },[removeTodolist,props.id]);\r\n    const onAllClickHandler = useCallback(() => changeFilter(\"All\", props.id),[changeFilter,props.id]);\r\n    const onActiveClickHandler = useCallback(() => changeFilter(\"Active\", props.id),[changeFilter,props.id]);\r\n    const onCompletedClickHandler = useCallback(() => changeFilter(\"Completed\", props.id),[changeFilter,props.id]);\r\n\r\n    const addTaskHandler = useCallback((title: string) => {\r\n        addTask(title, props.id)\r\n    }, [addTask, props.id])\r\n    const changeTodolistTitleHandler = useCallback((title: string) => {\r\n        changeTodolistTitle(title, props.id)\r\n    }, [changeTodolistTitle, props.id])\r\n    const onClickHandler = useCallback((id: string) => removeTask(id, props.id), [removeTask, props.id])\r\n\r\n\r\n    return <div>\r\n        <h3><EditableSpan spanTitle={todolist.title} callback={changeTodolistTitleHandler}/>\r\n            <IconButton onClick={removeTodolistHandler} disabled={todolist.entityStatus === 'loading'} size=\"small\">\r\n                <Delete fontSize=\"small\"/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm callBack={addTaskHandler} todolistStatus={todolist.entityStatus}/>\r\n        <ul style={{listStyleType: 'none'}}>\r\n            {taskForRender && taskForRender.map(t => <Tasks\r\n              key={t.id}\r\n              task={t}\r\n              onClickHandler={onClickHandler}\r\n              onChangeHandler={onChangeHandler}\r\n              changeTaskTitleHandler={changeTaskTitleHandler}\r\n            />)}\r\n        </ul>\r\n        <div>\r\n            <ButtonBody onClick={onAllClickHandler} name={'All'} filter={todolist.filter}/>\r\n            <ButtonBody onClick={onActiveClickHandler} name={'Active'} filter={todolist.filter}/>\r\n            <ButtonBody onClick={onCompletedClickHandler} name={'Completed'} filter={todolist.filter}/>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","import {rootReducersType} from \"../reducerRedux/ReducerRedux\";\r\n\r\n\r\nexport const todolistsState = (state:rootReducersType) => state.todolist\r\n\r\nexport const error = (state:rootReducersType) => state.app.error","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {isErrorAC} from \"../reducer/AppReducer\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\n\r\ntype ErrorAlertType = {\r\n\terrorStatus:string | null\r\n}\r\n\r\n\r\nexport const ErrorAlert = React.memo(({errorStatus}:ErrorAlertType) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst styleAlert = {\r\n\t\tbackgroundColor:'red'\r\n\t}\r\n\tconst isOpen = errorStatus != null\r\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch(isErrorAC(null))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n\t\t\t\t<Alert style={styleAlert} onClose={handleClose} variant=\"filled\" severity=\"error\">\r\n\t\t\t\t\t{errorStatus} 😠\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</>\r\n\t)\r\n})","import React, {useState} from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\n\r\nexport default function MenuAppBar() {\r\n\tconst [auth, setAuth] = useState(true);\r\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetAuth(event.target.checked);\r\n\t};\r\n\r\n\tconst handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box sx={{flexGrow: 1}}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={auth}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\taria-label=\"login switch\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel={auth ? 'Logout' : 'Login'}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar style={{justifyContent:\"space-between\"}}>\r\n\t\t\t\t\t<div style={{display:\"flex\",alignItems:\"center\"}}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\tMenu\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{auth && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n\t\t\t\t\t\t\t\t{/*<AccountCircle/>*/}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t{/*\t\t<Menu*/}\r\n\t\t\t\t\t{/*\t\t\tid=\"menu-appbar\"*/}\r\n\t\t\t\t\t{/*\t\t\tanchorEl={anchorEl}*/}\r\n\t\t\t\t\t{/*\t\t\tanchorOrigin={{*/}\r\n\t\t\t\t\t{/*\t\t\t\tvertical: 'top',*/}\r\n\t\t\t\t\t{/*\t\t\t\thorizontal: 'right',*/}\r\n\t\t\t\t\t{/*\t\t\t}}*/}\r\n\t\t\t\t\t{/*\t\t\tkeepMounted*/}\r\n\t\t\t\t\t{/*\t\t\ttransformOrigin={{*/}\r\n\t\t\t\t\t{/*\t\t\t\tvertical: 'top',*/}\r\n\t\t\t\t\t{/*\t\t\t\thorizontal: 'right',*/}\r\n\t\t\t\t\t{/*\t\t\t}}*/}\r\n\t\t\t\t\t{/*\t\t\topen={Boolean(anchorEl)}*/}\r\n\t\t\t\t\t{/*\t\t\tonClose={handleClose}*/}\r\n\t\t\t\t\t{/*\t\t>*/}\r\n\t\t\t\t\t{/*\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>*/}\r\n\t\t\t\t\t{/*\t\t\t<MenuItem onClick={handleClose}>My account</MenuItem>*/}\r\n\t\t\t\t\t{/*\t\t</Menu>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</Box>\r\n\t);\r\n}","import React from \"react\";\r\nimport {Box, LinearProgress} from \"@material-ui/core\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducersType} from \"../reducerRedux/ReducerRedux\";\r\n\r\nexport const LinearIndeterminate = () => {\r\n\tconst isLoad = useSelector<rootReducersType, 'loading' | 'success'>(state => state.app.status)\r\n\r\n\tconst styleLoad: {} = {\r\n\t\theight: '1px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styleLoad}>\r\n\t\t\t{isLoad === 'loading' &&\r\n\t\t\t<Box sx={{width: '100%'}}>\r\n\t\t\t\t<LinearProgress/>\r\n\t\t\t</Box>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import React, {useCallback, useEffect} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./TodoList\";\r\nimport {AddItemForm} from \"./components/AddItemForm\";\r\nimport {Container, Grid, Paper} from \"@material-ui/core\";\r\nimport {createTodolistTC, setTodolistsTC} from \"./reducer/TodoListReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {error, todolistsState} from \"./Selectors/Selectors\";\r\nimport {ErrorAlert} from \"./components/ErrorAlert\";\r\nimport MenuAppBar from \"./components/AppBar\";\r\nimport {LinearIndeterminate} from \"./components/LinearProgress\";\r\n\r\n\r\nfunction App() {\r\n\tconst dispatch = useDispatch();\r\n\tconst todolist = useSelector(todolistsState);\r\n\tconst errorStatus = useSelector(error)\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setTodolistsTC())\r\n\t}, [dispatch])\r\n\r\n\r\n\tconst addTodolist = useCallback( async (todolistTitle: string) => {\r\n\t\tdispatch(createTodolistTC(todolistTitle))\r\n\t},[dispatch])\r\n\r\n\r\n\tconst todolistsComponents = todolist.map(tl => {\r\n\t\treturn (\r\n\t\t\t<Grid key={tl.id} item>\r\n\t\t\t\t<Paper elevation={3} style={{padding: '20px'}}>\r\n\t\t\t\t\t<Todolist\r\n\t\t\t\t\t\tkey={tl.id}\r\n\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t\t\t<Container fixed>\r\n\t\t\t\t\t<MenuAppBar/>\r\n\t\t\t\t\t<LinearIndeterminate/>\r\n\t\t\t\t\t<div className='App'>\r\n\t\t\t\t\t\t<Grid container style={{margin: '50px 0', justifyContent: 'center'}}>\r\n\t\t\t\t\t\t\t<AddItemForm callBack={addTodolist}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t\t\t{todolistsComponents}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<ErrorAlert errorStatus={errorStatus}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {TodoListReducer} from \"../reducer/TodoListReducer\";\r\nimport {TaskReducer} from \"../reducer/TaskReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"../reducer/AppReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers ({\r\n\ttodolist: TodoListReducer,\r\n\ttasks: TaskReducer,\r\n\tapp:appReducer,\r\n})\r\n\r\n\r\n\r\nexport type rootReducersType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\n\r\n//@ts-ignore\r\nwindow.store=store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./reducerRedux/ReducerRedux\";\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider> ,  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}