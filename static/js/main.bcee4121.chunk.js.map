{"version":3,"sources":["ApiTodolists/ApiTodolist.ts","reducer/AppReducer.ts","reducer/TodoListReducer.ts","components/AppBar.tsx","reducer/TaskReducer.ts","components/LinearProgress.tsx","components/AddItemForm.tsx","components/ErrorAlert.tsx","Selectors/Selectors.ts","components/Button.tsx","components/EditableSpan.tsx","components/Task.tsx","TodoList.tsx","components/TodolistDemo.tsx","components/AuthLogin/AuthLogin.tsx","App.tsx","serviceWorker.ts","reducerRedux/ReducerRedux.tsx","index.tsx"],"names":["initial","axios","create","withCredentials","headers","baseURL","todolistsAPI","get","title","post","todolistId","delete","todolistID","put","taskId","module","initialState","status","error","isLoadAC","type","payload","isErrorAC","initialization","removeTodolistAC","changeTodolistTitleAC","changeTodolistEntityStatusAC","entityStatus","createTodolistTC","todolistTitle","dispatch","a","data","item","messages","resultCode","todolist","MenuAppBar","useState","auth","setAuth","React","setAnchorEl","Box","sx","flexGrow","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","aria-label","label","AppBar","position","Toolbar","style","justifyContent","display","alignItems","IconButton","size","edge","color","Typography","variant","aria-controls","aria-haspopup","onClick","currentTarget","Avatar","alt","src","TaskStatus","TaskPriorities","LinearIndeterminate","isLoad","useSelector","state","app","height","width","LinearProgress","AddItemForm","memo","callBack","todolistStatus","setTitle","setError","addTask","newTitle","trim","TextField","value","e","onKeyPress","charCode","Fab","disabled","Add","ErrorAlert","errorStatus","useDispatch","isOpen","handleClose","reason","Snackbar","open","autoHideDuration","onClose","Alert","backgroundColor","severity","todolistsState","ButtonBody","props","changeColorButton","name","filter","Button","endIcon","Send","EditableSpan","spanTitle","changeTitle","setChangeTitle","activeChangeMode","callback","onBlur","key","autoFocus","onDoubleClick","removeTaskAC","addTaskAC","task","updateTaskAC","TaskId","changeTaskEntityStatusAC","updateTaskTC","description","priority","startDate","deadline","todoListId","id","Tasks","onClickHandler","onChangeHandler","changeTaskTitleHandler","className","Completed","newIsDoneValue","New","Delete","fontSize","Todolist","el","tasks","useEffect","items","totalCount","taskForRender","t","removeTask","useCallback","deleteTaskTC","createTaskTC","changeFilter","changeTadoListAC","changeTodolistTitle","updateTodolistTC","removeTodolist","deleteTodolistTC","removeTodolistHandler","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler","addTaskHandler","changeTodolistTitleHandler","listStyleType","map","TodolistDemo","addTodolist","todolistsComponents","tl","Grid","Paper","elevation","padding","container","margin","spacing","AuthLogin","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","onSubmit","alert","JSON","stringify","marginTop","handleSubmit","FormControl","FormLabel","flexDirection","marginBottom","component","touched","getFieldProps","Checkbox","App","todolists","Container","fixed","path","element","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","b","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bcee4121.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TaskPriorities, TaskStatus, TaskType} from \"../reducer/TaskReducer\";\r\n\r\n\r\ntype AxiosGetTodolists = {\r\n\tid: string\r\n\taddedDate:string\r\n\torder: number\r\n\ttitle: string\r\n}\r\ntype AxiosResponseType<D> = {\r\n\tresultCode: number\r\n\tmessages: string[]\r\n\tdata: D\r\n}\r\ntype AxiosGetTasks = {\r\n\titems: TaskType[]\r\n\ttotalCount: number\r\n\terror: string\r\n}\r\n\r\nexport type AxiosUpdateTaskModule = {\r\n\ttitle: string\r\n\tdescription:string\r\n\tstatus: TaskStatus\r\n\tpriority: TaskPriorities\r\n\tstartDate: string\r\n\tdeadline: string\r\n}\r\n\r\nconst initial = axios.create(\r\n\t{\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t'API-KEY': '5c7c1e5a-aa4c-4b00-a92b-b6f5df506a28'\r\n\t},\r\n\tbaseURL:'https://social-network.samuraijs.com/api/1.1/'\r\n}\r\n)\r\n\r\nexport const todolistsAPI = {\r\n\tgetTodolists() {\r\n\t\treturn initial.get<Array<AxiosGetTodolists>>('todo-lists',{})\r\n\t},\r\n\tcreateTodolist(title:string) {\r\n\t\treturn initial.post<AxiosResponseType<{item:AxiosGetTodolists}>>('todo-lists', {title}, {})\r\n\t},\r\n\tdeleteTodolist(todolistId:string) {\r\n\t\treturn initial.delete<AxiosResponseType<{}>>(`todo-lists/${todolistId}`,  {})\r\n\t},\r\n\tupdateTodolist(todolistID:string,title:string) {\r\n\t\treturn initial.put<AxiosResponseType<{}>>(`todo-lists/${todolistID}`,{title},  {})\r\n\t},\r\n\tgetTasks(todolistId:string) {\r\n\t\treturn initial.get<AxiosGetTasks>(`todo-lists/${todolistId}/tasks`,  {})\r\n\t},\r\n\tcreateTask(todolistId:string,title:string) {\r\n\t\treturn initial.post<AxiosResponseType<{item:TaskType}>>(`todo-lists/${todolistId}/tasks`,  {title},{})\r\n\t},\r\n\tdeleteTask(todolistId:string,taskId:string) {\r\n\t\treturn initial.delete<AxiosResponseType<{}>>(`todo-lists/${todolistId}/tasks/${taskId}`,  {})\r\n\t},\r\n\tupdateTask(todolistID:string,taskId:string,module:AxiosUpdateTaskModule) {\r\n\t\treturn initial.put<AxiosResponseType<{item:TaskType}>>(`todo-lists/${todolistID}/tasks/${taskId}`,{...module},  {})\r\n\t},\r\n}\r\n","export type StatusType = 'loading' | 'success';\r\n\r\n\r\nexport type InitialStateType = {\r\n\tstatus: StatusType\r\n\terror: string | null\r\n}\r\n\r\nconst initialState:InitialStateType = {\r\n\tstatus:'success',\r\n\terror:null\r\n}\r\n\r\n\r\nexport const appReducer = (state=initialState, action:ActionAppReducerType):InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD-PROGRESS':\r\n\t\t\treturn {...state,\r\n\t\t\t...action.payload}\r\n\t\tcase 'ERROR-STATUS'\t:\r\n\t\t\treturn {...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport type ActionAppReducerType = ReturnType<typeof isLoadAC> | ReturnType<typeof isErrorAC>\r\n\r\nexport const isLoadAC = (status:StatusType) => {\r\n\treturn {\r\n\t\ttype:'LOAD-PROGRESS',\r\n\t\tpayload:{\r\n\t\t\tstatus\r\n\t\t}\r\n\t} as const\r\n}\r\n\r\nexport const isErrorAC = (error:string | null) => {\r\n\treturn {\r\n\t\ttype: 'ERROR-STATUS',\r\n\t\tpayload:{\r\n\t\t\terror\r\n\t\t}\r\n\t} as const\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {todolistsAPI} from \"../ApiTodolists/ApiTodolist\";\r\nimport {isErrorAC, isLoadAC} from \"./AppReducer\";\r\n\r\nexport type valueType = 'All' | 'Active' | 'Completed';\r\nexport type RequestStatusType = 'idle' | 'loading';\r\n\r\nexport type TodolistType = {\r\n\tid: string\r\n\ttitle: string\r\n\torder: number\r\n\taddedDate:string\r\n}\r\n\r\nexport type TodolistTypeHandler = TodolistType & {\r\n\tfilter:valueType,\r\n\tentityStatus:RequestStatusType\r\n}\r\n\r\nconst initialization: Array<TodolistTypeHandler> = []\r\n\r\nexport const TodoListReducer = (state = initialization, action: TodolistHandlerTypes): Array<TodolistTypeHandler> => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE-TODOLISTS':\r\n\t\t\treturn [...state.map(t => t.id === action.todolistID ? {...t, filter: action.value} : t)]\r\n\t\tcase \"REMOVE-TODOLISTS\":\r\n\t\t\treturn [\r\n\t\t\t\t...state.filter(t => t.id !== action.todolistID)\r\n\t\t\t]\r\n\t\tcase \"CHANGE-TODOLIST-TITLE\":\r\n\t\t\treturn state.map(tl => tl.id === action.todolistID ? {...tl, title: action.title} : tl)\r\n\t\tcase \"ADD-TODOLIST\":\r\n\t\t\treturn [\r\n\t\t\t\t{...action.todolist,\r\n\t\t\t\t\tfilter: 'All',\r\n\t\t\t\t\tentityStatus:'idle'\r\n\t\t\t\t}\r\n\t\t\t\t,...state\r\n\t\t\t]\r\n\t\tcase \"SET-TODOLIST\":\r\n\t\t\treturn action.todolists.map(el => ({...el, filter: 'All',\tentityStatus:'idle'}))\r\n\t\tcase \"CHANGE-TODOLIST-ENTITY-STATUS\":\r\n\t\t\treturn state.map(t => t.id === action.todolistID ? {...t,entityStatus:action.entityStatus} : t)\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type TodolistHandlerTypes =\r\n\tChangeTodoListACType\r\n\t| RemoveTodoListACType\r\n\t| ChangeTodolistTitleACType\r\n\t| AddTodolistACType\r\n\t| SetTodolistACType\r\n\t| ChangeTodolistEntityStatusACType\r\n\r\nexport type ChangeTodoListACType = ReturnType<typeof changeTadoListAC>\r\n\r\nexport const changeTadoListAC = (value: valueType, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TODOLISTS',\r\n\t\tvalue,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\nexport type RemoveTodoListACType = ReturnType<typeof removeTodolistAC>\r\n\r\nexport const removeTodolistAC = (todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'REMOVE-TODOLISTS',\r\n\t\ttodolistID,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTodolistTitleACType = ReturnType<typeof changeTodolistTitleAC>\r\n\r\nexport const changeTodolistTitleAC = (title: string, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: \"CHANGE-TODOLIST-TITLE\",\r\n\t\ttitle,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type AddTodolistACType = ReturnType<typeof addTodolistAC>\r\n\r\nexport const addTodolistAC = (todolist:TodolistType) => {\r\n\treturn {\r\n\t\ttype: 'ADD-TODOLIST',\r\n\t\t\ttodolist\r\n\t} as const\r\n}\r\n\r\nexport type SetTodolistACType = ReturnType<typeof setTodolistAC>\r\n\r\nexport const setTodolistAC = (todolists: TodolistType[]) => {\r\n\treturn {\r\n\t\ttype: 'SET-TODOLIST',\r\n\t\ttodolists,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTodolistEntityStatusACType = ReturnType<typeof changeTodolistEntityStatusAC>\r\n\r\nexport const changeTodolistEntityStatusAC = (todolistID: string,entityStatus:RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TODOLIST-ENTITY-STATUS',\r\n\t\ttodolistID,\r\n\t\tentityStatus,\r\n\t} as const\r\n}\r\n\r\nexport const setTodolistsTC = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tconst {data} = await todolistsAPI.getTodolists()\r\n\t\t\tdispatch(setTodolistAC(data))\r\n\t\t}\r\n\t\tcatch (error){\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const createTodolistTC = (todolistTitle:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tconst {data} = await todolistsAPI.createTodolist(todolistTitle)\r\n\t\t\tconst {data:{item}, messages,resultCode} = data\r\n\t\t\tif(resultCode === 0){\r\n\t\t\t\tdispatch(addTodolistAC(item))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(isErrorAC(messages[0]))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const deleteTodolistTC = (todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tdispatch(changeTodolistEntityStatusAC(todolistID,'loading'))\r\n\t\tawait todolistsAPI.deleteTodolist(todolistID)\r\n\t\tdispatch(removeTodolistAC(todolistID));\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\nexport const updateTodolistTC = (title:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tawait todolistsAPI.updateTodolist(todolistID,title)\r\n\t\tdispatch(changeTodolistTitleAC(title,todolistID))\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n","import React, {useState} from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\n\r\nexport default function MenuAppBar() {\r\n\tconst [auth, setAuth] = useState(true);\r\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetAuth(event.target.checked);\r\n\t};\r\n\r\n\tconst handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box sx={{flexGrow: 1}}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={auth}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\taria-label=\"login switch\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel={auth ? 'Logout' : 'Login'}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar style={{justifyContent:\"space-between\"}}>\r\n\t\t\t\t\t<div style={{display:\"flex\",alignItems:\"center\"}}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\tMenu\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{auth && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n\t\t\t\t\t\t\t\t{/*<AccountCircle/>*/}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t{/*\t\t<Menu*/}\r\n\t\t\t\t\t{/*\t\t\tid=\"menu-appbar\"*/}\r\n\t\t\t\t\t{/*\t\t\tanchorEl={anchorEl}*/}\r\n\t\t\t\t\t{/*\t\t\tanchorOrigin={{*/}\r\n\t\t\t\t\t{/*\t\t\t\tvertical: 'top',*/}\r\n\t\t\t\t\t{/*\t\t\t\thorizontal: 'right',*/}\r\n\t\t\t\t\t{/*\t\t\t}}*/}\r\n\t\t\t\t\t{/*\t\t\tkeepMounted*/}\r\n\t\t\t\t\t{/*\t\t\ttransformOrigin={{*/}\r\n\t\t\t\t\t{/*\t\t\t\tvertical: 'top',*/}\r\n\t\t\t\t\t{/*\t\t\t\thorizontal: 'right',*/}\r\n\t\t\t\t\t{/*\t\t\t}}*/}\r\n\t\t\t\t\t{/*\t\t\topen={Boolean(anchorEl)}*/}\r\n\t\t\t\t\t{/*\t\t\tonClose={handleClose}*/}\r\n\t\t\t\t\t{/*\t\t>*/}\r\n\t\t\t\t\t{/*\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>*/}\r\n\t\t\t\t\t{/*\t\t\t<MenuItem onClick={handleClose}>My account</MenuItem>*/}\r\n\t\t\t\t\t{/*\t\t</Menu>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</Box>\r\n\t);\r\n}","import {AddTodolistACType, RemoveTodoListACType, RequestStatusType} from \"./TodoListReducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AxiosUpdateTaskModule, todolistsAPI} from \"../ApiTodolists/ApiTodolist\";\r\nimport {isErrorAC, isLoadAC} from \"./AppReducer\";\r\n\r\nexport type TasksStateType = {\r\n\t[key: string]: Array<TaskTypeHandler>\r\n}\r\n\r\n\r\nexport enum TaskStatus {\r\n\tNew = 0,\r\n\tInProgress = 1,\r\n\tCompleted = 2,\r\n\tDraft = 3,\r\n}\r\nexport enum TaskPriorities {\r\n\tLow = 0,\r\n\tMiddle = 1,\r\n\tHi = 2,\r\n\tUrgently = 3,\r\n\tLater = 4,\r\n}\r\n\r\nexport type TaskType = {\r\n\tdescription: string\r\n\ttitle: string\r\n\tstatus: TaskStatus\r\n\tpriority: TaskPriorities\r\n\tstartDate: string\r\n\tdeadline: string\r\n\tid: string\r\n\ttodoListId:string\r\n\torder: number\r\n\taddedDate: string\r\n}\r\n\r\nexport type TaskTypeHandler =  TaskType & {\r\n\tentityStatus:RequestStatusType\r\n}\r\nconst initialization:TasksStateType = {}\r\n\r\nexport const TaskReducer = (state = initialization, action: TaskHandlerTypes): TasksStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"REMOVE-TASK\":\r\n\t\t\treturn {...state, [action.todolistID]: state[action.todolistID].filter(t => t.id !== action.taskId)}\r\n\t\tcase \"ADD-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID] : [{...action.task,entityStatus:'idle'},...state[action.todolistID]]\r\n\t\t\t}\r\n\t\tcase \"UPDATE-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID]: state[action.todolistID].map(b => b.id === action.TaskId ? {\r\n\t\t\t\t\t...b,\r\n\t\t\t\t\t...action.module\r\n\t\t\t\t} : b)\r\n\t\t\t}\r\n\t\tcase \"ADD-TODOLIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolist.id]: []\r\n\t\t\t}\r\n\t\tcase \"SET-TASK\":\r\n\t\t\treturn {\r\n\t\t\t\t...state, [action.todolistID]: action.tasks.map(t => ({...t, entityStatus: 'idle'}))\r\n\t\t\t}\r\n\t\tcase \"REMOVE-TODOLISTS\":\r\n\t\t\tdelete state[action.todolistID]\r\n\t\t\treturn state\r\n\t\tcase \"CHANGE-TASK-ENTITY-STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.todolistID]: state[action.todolistID].map(t => t.id === action.taskId ? {\r\n\t\t\t\t\t...t, entityStatus: action.entityStatus\r\n\t\t\t\t} : t)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type TaskHandlerTypes =\r\n\tRemoveTaskACType\r\n\t| AddTaskACType\r\n\t| AddTodolistACType\r\n\t| ChangeTaskTitleACType\r\n\t| RemoveTodoListACType\r\n\t| SetTaskACType\r\n\t| changeTaskEntityStatusType\r\n\r\nexport type RemoveTaskACType = ReturnType<typeof removeTaskAC>\r\n\r\nexport const removeTaskAC = (taskId: string, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'REMOVE-TASK',\r\n\t\ttaskId,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type AddTaskACType = ReturnType<typeof addTaskAC>\r\n\r\nexport const addTaskAC = (todolistID:string,task:TaskType) => {\r\n\treturn {\r\n\t\ttype: 'ADD-TASK',\r\n\t\ttodolistID,\r\n\t\ttask,\r\n\t} as const\r\n}\r\n\r\nexport type ChangeTaskTitleACType = ReturnType<typeof updateTaskAC>\r\n\r\nexport const updateTaskAC = (TaskId: string, module:AxiosUpdateTaskModule, todolistID: string) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE-TASK',\r\n\t\tTaskId,\r\n\t\tmodule,\r\n\t\ttodolistID\r\n\t} as const\r\n}\r\n\r\nexport type SetTaskACType = ReturnType<typeof setTaskAC>\r\n\r\nexport const setTaskAC = (todolistID:string,tasks:TaskType[]) => {\r\n\treturn {\r\n\t\ttype: 'SET-TASK',\r\n\t\ttodolistID,\r\n\t\ttasks,\r\n\t} as const\r\n}\r\n\r\nexport type changeTaskEntityStatusType = ReturnType<typeof changeTaskEntityStatusAC>\r\n\r\nexport const changeTaskEntityStatusAC = (taskId:string,todolistID: string,entityStatus:RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE-TASK-ENTITY-STATUS',\r\n\t\ttaskId,\r\n\t\ttodolistID,\r\n\t\tentityStatus,\r\n\t} as const\r\n}\r\n\r\nexport const getTasksTC = (id:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tconst {data} = await todolistsAPI.getTasks(id)\r\n\t\tconst {error, items, totalCount} = data\r\n\t\tdispatch(setTaskAC(id, items))\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\n\r\nexport const createTaskTC = (title:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry{\r\n\t\t\tconst {data} = await todolistsAPI.createTask(todolistID, title)\r\n\t\t\tconst {data: {item}, messages, resultCode} = data\r\n\t\t\tif(resultCode === 0) {\r\n\t\t\t\tdispatch(addTaskAC(todolistID, item))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(isErrorAC(messages[0]))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e){\r\n\t\t\tdispatch(isErrorAC('Authorization has been denied for this request.'))\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const deleteTaskTC = (taskId:string,todolistID:string) => {\r\n\treturn async (dispatch:Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\tdispatch(changeTaskEntityStatusAC(taskId,todolistID,'loading'))\r\n\t\tawait todolistsAPI.deleteTask(todolistID, taskId);\r\n\t\tdispatch(removeTaskAC(taskId, todolistID));\r\n\t\tdispatch(isLoadAC('success'))\r\n\t}\r\n}\r\n\r\nexport const updateTaskTC = (task:TaskType) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\t\tconst module: AxiosUpdateTaskModule = {\r\n\t\t\t\ttitle:task.title,\r\n\t\t\t\tdescription: task.description,\r\n\t\t\t\tstatus:task.status,\r\n\t\t\t\tpriority: task.priority,\r\n\t\t\t\tstartDate: task.startDate,\r\n\t\t\t\tdeadline: task.deadline,\r\n\t\t\t}\r\n\t\t\tconst {data} = await todolistsAPI.updateTask(task.todoListId,task.id,module)\r\n\t\t\tconst {data: {item},messages,resultCode} = data\r\n\t\t\tdispatch(updateTaskAC(task.id, item, task.todoListId))\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}","import React from \"react\";\r\nimport {Box, LinearProgress} from \"@material-ui/core\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducersType} from \"../reducerRedux/ReducerRedux\";\r\n\r\nexport const LinearIndeterminate = () => {\r\n\tconst isLoad = useSelector<rootReducersType, 'loading' | 'success'>(state => state.app.status)\r\n\r\n\tconst styleLoad: {} = {\r\n\t\theight: '1px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styleLoad}>\r\n\t\t\t{isLoad === 'loading' &&\r\n\t\t\t<Box sx={{width: '100%'}}>\r\n\t\t\t\t<LinearProgress/>\r\n\t\t\t</Box>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import React, {ChangeEvent, KeyboardEvent,useState} from \"react\";\r\nimport {Fab, TextField} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport {RequestStatusType} from \"../reducer/TodoListReducer\";\r\n\r\ntype AddItemFormType = {\r\n  callBack: (title: string) => void\r\n  todolistStatus?: RequestStatusType\r\n}\r\n\r\nexport const AddItemForm = React.memo(({callBack,todolistStatus}:AddItemFormType)=>{\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addTask = () => {\r\n        let newTitle = title.trim();\r\n        if (newTitle !== \"\") {\r\n           callBack(newTitle);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if(error !== null) setError(null);\r\n        if (e.charCode === 13 && todolistStatus === 'idle' ) {\r\n          addTask();\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <TextField value={title}\r\n                 onChange={onChangeHandler}\r\n                 onKeyPress={onKeyPressHandler}\r\n                 error={!!error}\r\n                 label={error ? error : 'Type value'}\r\n      />\r\n      <Fab color=\"secondary\" size=\"small\" onClick={addTask} disabled={todolistStatus === 'loading'}>\r\n        <Add/>\r\n      </Fab>\r\n    </div>\r\n  )\r\n})","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {isErrorAC} from \"../reducer/AppReducer\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\n\r\ntype ErrorAlertType = {\r\n\terrorStatus:string | null\r\n}\r\n\r\n\r\nexport const ErrorAlert = React.memo(({errorStatus}:ErrorAlertType) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst styleAlert = {\r\n\t\tbackgroundColor:'red'\r\n\t}\r\n\tconst isOpen = errorStatus != null\r\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch(isErrorAC(null))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n\t\t\t\t<Alert style={styleAlert} onClose={handleClose} variant=\"filled\" severity=\"error\">\r\n\t\t\t\t\t{errorStatus} 😠\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</>\r\n\t)\r\n})","import {rootReducersType} from \"../reducerRedux/ReducerRedux\";\r\n\r\n\r\nexport const todolistsState = (state:rootReducersType) => state.todolist\r\n\r\nexport const error = (state:rootReducersType) => state.app.error","import React from \"react\";\r\nimport {Send} from \"@material-ui/icons\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {valueType} from \"../reducer/TodoListReducer\";\r\n\r\ntype ButtonType = {\r\n\tonClick: () => void\r\n\tname:string\r\n\tfilter?:valueType\r\n\tcolor?:string\r\n}\r\n\r\nexport const ButtonBody = React.memo((props:ButtonType) => {\r\n\tconst callback = () => props.onClick();\r\n\tconst changeColorButton = props.name === props.filter ? 'primary' : 'inherit';\r\n\treturn (\r\n\t<Button endIcon={<Send />} variant=\"contained\" color={changeColorButton} onClick={callback}>{props.name}</Button>\r\n\t)\r\n})\r\n","import React, {useState, ChangeEvent, KeyboardEvent} from \"react\";\r\n\r\ntype EditableSpanType = {\r\n\tspanTitle: string\r\n\tcallback: (spanTitle: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(({spanTitle, ...props}: EditableSpanType) => {\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [changeTitle, setChangeTitle] = useState(false)\r\n\tconst changeHandler = () => {\r\n\t\tsetChangeTitle(true)\r\n\t\tsetTitle(spanTitle)\r\n\t}\r\n\tconst changeInputHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n\tsetTitle(e.currentTarget.value)\r\n\t}\r\n\tconst activeChangeMode = () => {\r\n\t\tprops.callback(title)\r\n\t\tsetChangeTitle(false)\r\n\t}\r\n\tconst changeInputEnter = (e:KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tactiveChangeMode()\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\tchangeTitle\r\n\t\t\t? <input value={title} onChange={changeInputHandler} onBlur={activeChangeMode} onKeyPress={changeInputEnter} autoFocus/>\r\n\t\t\t: <span onDoubleClick={changeHandler}>{spanTitle}</span>\r\n\t)\r\n})","import React, {ChangeEvent} from \"react\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {TaskStatus, TaskType, TaskTypeHandler} from \"../reducer/TaskReducer\";\r\n\r\n\r\ntype TasksType = {\r\n\ttask: TaskTypeHandler\r\n\tonClickHandler: (id: string) => void\r\n\tonChangeHandler: (task:TaskType) => void\r\n\tchangeTaskTitleHandler: (task:TaskType) => void\r\n}\r\n\r\n\r\nexport const Tasks = React.memo((props: TasksType) => {\r\n\tconst {task, onClickHandler,onChangeHandler,changeTaskTitleHandler} = props\r\n\r\n\r\n\treturn <li className={task.status === TaskStatus.Completed ? \"is-done\" : \"\"}>\r\n\t\t<input type=\"checkbox\" onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tlet newIsDoneValue = e.currentTarget.checked;\r\n\t\t\tonChangeHandler({...task,status: newIsDoneValue ? TaskStatus.Completed : TaskStatus.New})\r\n\t\t}}\r\n\t\t\t\t\t checked={task.status === TaskStatus.Completed}/>\r\n\t\t<EditableSpan spanTitle={task.title} callback={(title: string) => changeTaskTitleHandler({...task,title})}/>\r\n\t\t<IconButton disabled={task.entityStatus === 'loading'} onClick={() => onClickHandler(task.id)} size=\"small\">\r\n\t\t\t<Delete fontSize=\"small\"/>\r\n\t\t</IconButton>\r\n\t</li>\r\n})\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {AddItemForm} from \"./components/AddItemForm\";\r\nimport {ButtonBody} from \"./components/Button\";\r\nimport {EditableSpan} from \"./components/EditableSpan\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {\r\n    createTaskTC,\r\n    deleteTaskTC,\r\n    getTasksTC,\r\n    TaskStatus,\r\n    TaskType,\r\n    TaskTypeHandler,\r\n    updateTaskTC\r\n} from \"./reducer/TaskReducer\";\r\nimport {\r\n    changeTadoListAC,\r\n    deleteTodolistTC,\r\n    TodolistTypeHandler,\r\n    updateTodolistTC,\r\n    valueType\r\n} from \"./reducer/TodoListReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducersType} from \"./reducerRedux/ReducerRedux\";\r\nimport {Tasks} from \"./components/Task\";\r\n\r\n\r\ntype PropsType = {\r\n    id: string\r\n}\r\n\r\nexport const Todolist = React.memo(({...props}: PropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const todolist = useSelector<rootReducersType, TodolistTypeHandler>(state => state.todolist.filter(el => el.id === props.id)[0]);\r\n    const tasks = useSelector<rootReducersType, Array<TaskTypeHandler>>(state => state.tasks[props.id]);\r\n\r\n    useEffect(() => {\r\n       dispatch(getTasksTC(props.id))\r\n    }, [dispatch, props.id])\r\n\r\n\r\n    let taskForRender = tasks\r\n    if (todolist.filter === 'Active') {\r\n        taskForRender = tasks.filter(t => t.status === TaskStatus.New)\r\n    }\r\n    if (todolist.filter === 'Completed') {\r\n        taskForRender = tasks.filter(t => t.status === TaskStatus.Completed)\r\n    }\r\n\r\n    const removeTask = useCallback((taskId: string, todolistID: string) => {\r\n        dispatch(deleteTaskTC(taskId,todolistID))\r\n    }, [dispatch])\r\n\r\n    const addTask = useCallback( (title: string, todolistID: string) => {\r\n       dispatch(createTaskTC(title,todolistID))\r\n    }, [dispatch])\r\n    const changeFilter = useCallback((value: valueType, todolistID: string) => {\r\n        dispatch(changeTadoListAC(value, todolistID));\r\n    }, [dispatch])\r\n    const changeTodolistTitle = useCallback( (title: string, todolistID: string) => {\r\n      dispatch(updateTodolistTC(title,todolistID))\r\n    }, [dispatch])\r\n    const removeTodolist = useCallback( (todolistID: string) => {\r\n       dispatch(deleteTodolistTC(todolistID))\r\n    }, [dispatch])\r\n    const changeTaskTitleHandler = useCallback((task:TaskType) => {\r\n        dispatch(updateTaskTC(task))\r\n    }, [dispatch])\r\n    const onChangeHandler = useCallback((task:TaskType) => {\r\n        dispatch(updateTaskTC(task));\r\n    }, [dispatch])\r\n\r\n    const removeTodolistHandler = useCallback(() => {\r\n        removeTodolist(props.id)\r\n    },[removeTodolist,props.id]);\r\n    const onAllClickHandler = useCallback(() => changeFilter(\"All\", props.id),[changeFilter,props.id]);\r\n    const onActiveClickHandler = useCallback(() => changeFilter(\"Active\", props.id),[changeFilter,props.id]);\r\n    const onCompletedClickHandler = useCallback(() => changeFilter(\"Completed\", props.id),[changeFilter,props.id]);\r\n\r\n    const addTaskHandler = useCallback((title: string) => {\r\n        addTask(title, props.id)\r\n    }, [addTask, props.id])\r\n    const changeTodolistTitleHandler = useCallback((title: string) => {\r\n        changeTodolistTitle(title, props.id)\r\n    }, [changeTodolistTitle, props.id])\r\n    const onClickHandler = useCallback((id: string) => removeTask(id, props.id), [removeTask, props.id])\r\n\r\n\r\n    return <div>\r\n        <h3><EditableSpan spanTitle={todolist.title} callback={changeTodolistTitleHandler}/>\r\n            <IconButton onClick={removeTodolistHandler} disabled={todolist.entityStatus === 'loading'} size=\"small\">\r\n                <Delete fontSize=\"small\"/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm callBack={addTaskHandler} todolistStatus={todolist.entityStatus}/>\r\n        <ul style={{listStyleType: 'none'}}>\r\n            {taskForRender && taskForRender.map(t => <Tasks\r\n              key={t.id}\r\n              task={t}\r\n              onClickHandler={onClickHandler}\r\n              onChangeHandler={onChangeHandler}\r\n              changeTaskTitleHandler={changeTaskTitleHandler}\r\n            />)}\r\n        </ul>\r\n        <div>\r\n            <ButtonBody onClick={onAllClickHandler} name={'All'} filter={todolist.filter}/>\r\n            <ButtonBody onClick={onActiveClickHandler} name={'Active'} filter={todolist.filter}/>\r\n            <ButtonBody onClick={onCompletedClickHandler} name={'Completed'} filter={todolist.filter}/>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {ErrorAlert} from \"./ErrorAlert\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {error, todolistsState} from \"../Selectors/Selectors\";\r\nimport {Todolist} from \"../TodoList\";\r\nimport {createTodolistTC} from \"../reducer/TodoListReducer\";\r\n\r\n\r\n\r\n\r\nexport const TodolistDemo = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst todolist = useSelector(todolistsState);\r\n\tconst errorStatus = useSelector(error)\r\n\r\n\tconst addTodolist = useCallback( async (todolistTitle: string) => {\r\n\t\tdispatch(createTodolistTC(todolistTitle))\r\n\t},[dispatch])\r\n\r\n\tconst todolistsComponents = todolist.map(tl => {\r\n\t\treturn (\r\n\t\t\t<Grid key={tl.id} item>\r\n\t\t\t\t<Paper elevation={3} style={{padding: '20px'}}>\r\n\t\t\t\t\t<Todolist\r\n\t\t\t\t\t\tkey={tl.id}\r\n\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Grid container style={{margin: '50px 0', justifyContent: 'center'}}>\r\n\t\t\t\t<AddItemForm callBack={addTodolist}/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t{todolistsComponents}\r\n\t\t\t</Grid>\r\n\t\t\t<ErrorAlert errorStatus={errorStatus}/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormikErrors, useFormik} from \"formik\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nexport const AuthLogin = () => {\r\n\ttype FormikErrorType = {\r\n\t\temail: string\r\n\t\tpassword: string\r\n\t\trememberMe: boolean\r\n\t}\r\n\r\n\tconst validate = (values: FormikErrorType) => {\r\n\t\tconst errors: FormikErrors<FormikErrorType> = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Invalid email address';\r\n\t\t}\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = 'Invalid email address';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false\r\n\t\t},\r\n\t\tvalidate,\r\n\t\tonSubmit: values => {\r\n\t\t\talert(JSON.stringify(values));\r\n\t\t},\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div style={{display: \"flex\", justifyContent: \"center\",marginTop: \"40px\"}}>\r\n\t\t\t<div>\r\n\t\t\t\t<Paper elevation={3} style={{padding: '20px'}}>\r\n\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<FormLabel>\r\n\t\t\t\t\t\t\t<p>Email: aleksmaifet@gmail.com</p>\r\n\t\t\t\t\t\t\t<p>Password: Free</p>\r\n\t\t\t\t\t\t</FormLabel>\r\n\t\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", margin: \"30px 0\"}}>\r\n\t\t\t\t\t\t\t<Avatar style={{backgroundColor: \"red\", marginBottom: \"20px\"}}>\r\n\t\t\t\t\t\t\t\t<LockOutlinedIcon/>\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<TextField label={formik.errors.email && formik.touched.email ? formik.errors.email : \"Email\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t margin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t error={!!formik.errors.email && !!formik.touched.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps(\"email\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField type=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t label={formik.errors.password && formik.touched.password ? formik.errors.password : \"Password\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t margin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t error={!!formik.errors.password && !!formik.touched.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps(\"password\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tstyle={{margin: \"20px 0\"}}\r\n\t\t\t\t\t\t\t\tlabel={\"Remember me\"}\r\n\t\t\t\t\t\t\t\tcontrol={<Checkbox/>}\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps(\"rememberMe\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype={\"submit\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\tcolor={\"primary\"}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Container} from \"@material-ui/core\";\r\nimport {setTodolistsTC} from \"./reducer/TodoListReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport MenuAppBar from \"./components/AppBar\";\r\nimport {LinearIndeterminate} from \"./components/LinearProgress\";\r\nimport {TodolistDemo} from \"./components/TodolistDemo\";\r\nimport {Routes,Route} from \"react-router-dom\";\r\nimport {AuthLogin} from \"./components/AuthLogin/AuthLogin\";\r\n\r\n\r\nfunction App() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setTodolistsTC())\r\n\t}, [dispatch])\r\n\r\n\r\n\treturn (\r\n\t\t<Container fixed>\r\n\t\t\t<MenuAppBar/>\r\n\t\t\t<LinearIndeterminate/>\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"/Todolist\" element={<TodolistDemo/>}/>\r\n\t\t\t\t<Route path=\"/login\" element={<AuthLogin/>}/>\r\n\t\t\t</Routes>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {TodoListReducer} from \"../reducer/TodoListReducer\";\r\nimport {TaskReducer} from \"../reducer/TaskReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"../reducer/AppReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers ({\r\n\ttodolist: TodoListReducer,\r\n\ttasks: TaskReducer,\r\n\tapp:appReducer,\r\n})\r\n\r\n\r\n\r\nexport type rootReducersType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\n\r\n//@ts-ignore\r\nwindow.store=store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./reducerRedux/ReducerRedux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App/>\r\n\t\t</Provider>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}